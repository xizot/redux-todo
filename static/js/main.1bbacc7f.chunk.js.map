{"version":3,"sources":["components/Layouts/Header.module.css","actions/auth-actions.js","helpers/index.js","components/Loading/Loading.module.css","reducers/task.js","reducers/auth.js","components/Layouts/Header.js","components/Common/ProtectedRoute.js","components/Loading/Loading.js","App.js","store/index.js","index.js"],"names":["module","exports","login","username","password","dispatch","a","httpLogin","authActions","resetState","sendRequest","axios","post","process","response","data","accessToken","refreshToken","loginSucceeded","requestError","error","register","fullname","httpRegister","message","registerSucceeded","verifyToken","headers","useAuthorization","httpVerify","verifiedToken","localStorage","removeItem","logout","httpLogout","get","isEmpty","value","trim","isGreaterThreeCharacters","length","token","getItem","Authorization","tasksSlice","createSlice","name","initialState","isFetchingData","currentTasks","notCompletedTasks","isShownModal","completedTasks","errorHandler","reducers","fetchingData","state","taskErrorHandler","action","payload","resetErrorState","getTasksError","replaceCurrentTasks","filter","task","isDone","addTask","newTask","unshift","removeTask","id","taskId","updateTitle","title","existingCurrentTaskIndex","findIndex","updateComplete","showModal","closeModal","tasksActions","actions","authSlice","isAuthenticated","registerSuccessMessage","errorResponse","isRequesting","setItem","resetError","Header","props","useSelector","auth","useDispatch","className","classes","header","to","activeClassName","active","onClick","ProtectedRoute","Component","component","rest","render","pathname","from","location","Loading","loading","line","Register","lazy","Login","Tasks","App","useEffect","fallback","path","exact","store","configureStore","reducer","tasks","ReactDOM","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,yBAAyB,OAAS,yB,oOCElFC,EACT,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,8CACA,WAAOC,GAAP,mBAAAC,EAAA,6DACUC,EADV,+BAAAD,EAAA,MACsB,kCAAAA,EAAA,6DACdD,EAASG,IAAYC,cACrBJ,EAASG,IAAYE,eAFP,SAGSC,IAAMC,KAAN,UAChBC,0CADgB,eAEnB,CACIV,WACAC,aAPM,OAGRU,EAHQ,SAUwBA,EAASC,KAAvCC,EAVM,EAUNA,YAAaC,EAVP,EAUOA,aACrBZ,EACIG,IAAYU,eAAe,CACvBF,cACAC,kBAdM,2CADtB,uEAqBcV,IArBd,sDAuBQF,EACIG,IAAYW,cACR,2CAAOL,gBAAP,mBAAiBC,YAAjB,eAAuBK,QAAS,0BAzBhD,wDADA,uDAgCSC,EACT,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUnB,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,SAAvB,8CACA,WAAOC,GAAP,mBAAAC,EAAA,6DACUiB,EADV,+BAAAjB,EAAA,MACyB,8BAAAA,EAAA,6DACjBD,EAASG,IAAYC,cACrBJ,EAASG,IAAYE,eAFJ,SAGMC,IAAMC,KAAN,UAChBC,0CADgB,kBAEnB,CAAES,WAAUnB,WAAUC,aALT,OAGXU,EAHW,OAOTU,EAAYV,EAASC,KAArBS,QACRnB,EAASG,IAAYiB,kBAAkBD,IARtB,2CADzB,uEAacD,IAbd,sDAeQlB,EACIG,IAAYW,cACR,2CAAOL,gBAAP,mBAAiBC,YAAjB,eAAuBK,QAAS,0BAjBhD,wDADA,uDAwBSM,EAAc,yDAAM,WAAOrB,GAAP,iBAAAC,EAAA,yDACvBqB,EAAUC,cADa,wDAKvBC,EALuB,+BAAAvB,EAAA,MAKV,sBAAAA,EAAA,6DACfD,EAASG,IAAYC,cADN,SAETE,IAAMC,KAAN,UACCC,0CADD,sBAEF,GACA,CACIc,YANO,OASftB,EAASG,IAAYsB,iBATN,2CALU,uEAkBnBD,IAlBmB,uDAoBzBE,aAAaC,WAAW,eACxBD,aAAaC,WAAW,gBArBC,yDAAN,uDAwBdC,EAAS,yDAAM,WAAO5B,GAAP,iBAAAC,EAAA,yDAClBqB,EAAUC,cADQ,wDAKlBM,EALkB,+BAAA5B,EAAA,MAKL,sBAAAA,EAAA,6DACfD,EAASG,IAAYC,cADN,SAETE,IAAMwB,IAAN,UAAatB,0CAAb,gBAA2D,CAC7Dc,YAHW,OAKftB,EAASG,IAAYyB,UALN,2CALK,uEAcdC,IAdc,uDAgBpB7B,EAASG,IAAYyB,UAhBD,yDAAN,wD,gCCrFtB,sGAAO,IAAMG,EAAU,SAACC,GAAD,MAA4B,KAAjBA,EAAMC,QAC3BC,EAA2B,SAACF,GAAD,OAAWA,EAAMC,OAAOE,QAAU,GAC7DZ,EAAmB,WAC5B,IAAMD,EAAU,GACVc,EAAQV,aAAaW,QAAQ,eACnC,OAAKD,GAILd,EAAQgB,cAAR,iBAAkCF,GAC3Bd,GAJI,O,mBCLf3B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAQ,yB,sFCCpF2C,EAAaC,YAAY,CAC3BC,KAAM,QACNC,aAAc,CACVC,gBAAgB,EAChBC,aAAc,GACdC,kBAAmB,GACnBC,cAAc,EACdC,eAAgB,GAChBhC,MAAO,KACPiC,aAAc,MAElBC,SAAU,CACNC,aADM,SACOC,GACTA,EAAMR,gBAAiB,GAE3BS,iBAJM,SAIWD,EAAOE,GACpBF,EAAMH,aAAeK,EAAOC,SAEhCC,gBAPM,SAOUJ,GACZA,EAAMpC,MAAQ,KACdoC,EAAMH,aAAe,MAEzBQ,cAXM,SAWQL,EAAOE,GACjBF,EAAMpC,MAAQsC,EAAOC,QACrBH,EAAMR,gBAAiB,GAE3Bc,oBAfM,SAecN,EAAOE,GACvBF,EAAMR,gBAAiB,EACvBQ,EAAMP,aAAN,YAAyBS,EAAOC,SAChCH,EAAMJ,eAAiB,YAAIM,EAAOC,SAASI,QACvC,SAACC,GAAD,OAAUA,EAAKC,UAEnBT,EAAMN,kBAAoB,YAAIQ,EAAOC,SAASI,QAC1C,SAACC,GAAD,OAAWA,EAAKC,WAIxBC,QA1BM,SA0BEV,EAAOE,GACX,IAAMS,EAAUT,EAAOC,QACvBH,EAAMP,aAAamB,QAAQD,GAC3BX,EAAMN,kBAAkBkB,QAAQD,IAEpCE,WA/BM,SA+BKb,EAAOE,GACd,IAAMY,EAAKZ,EAAOC,QAClBH,EAAMP,aAAeO,EAAMP,aAAac,QACpC,SAACC,GAAD,OAAUA,EAAKO,SAAWD,KAE9Bd,EAAMN,kBAAoBM,EAAMN,kBAAkBa,QAC9C,SAACC,GAAD,OAAUA,EAAKO,SAAWD,KAE9Bd,EAAMJ,eAAiBI,EAAMJ,eAAeW,QACxC,SAACC,GAAD,OAAUA,EAAKO,SAAWD,MAGlCE,YA3CM,SA2CMhB,EAAOE,GACf,MAA0BA,EAAOC,QAAzBY,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,MACVC,EAA2BlB,EAAMP,aAAa0B,WAChD,SAACX,GAAD,OAAUA,EAAKO,SAAWA,KAE9Bf,EAAMP,aAAayB,GAA0BD,MAAQA,EACrDjB,EAAMJ,eAAiBI,EAAMP,aAAac,QACtC,SAACC,GAAD,OAAUA,EAAKC,UAEnBT,EAAMN,kBAAoBM,EAAMP,aAAac,QACzC,SAACC,GAAD,OAAWA,EAAKC,UAGpBT,EAAML,cAAe,GAGzByB,eA3DM,SA2DSpB,EAAOE,GAClB,MAA2BA,EAAOC,QAA1BY,EAAR,EAAQA,OAAQN,EAAhB,EAAgBA,OAEVS,EAA2BlB,EAAMP,aAAa0B,WAChD,SAACX,GAAD,OAAUA,EAAKO,SAAWA,KAE9Bf,EAAMP,aAAayB,GAA0BT,OAASA,EACtDT,EAAMJ,eAAiBI,EAAMP,aAAac,QACtC,SAACC,GAAD,OAAUA,EAAKC,UAEnBT,EAAMN,kBAAoBM,EAAMP,aAAac,QACzC,SAACC,GAAD,OAAWA,EAAKC,WAIxBY,UA1EM,SA0EIrB,GACNA,EAAML,cAAe,GAEzB2B,WA7EM,SA6EKtB,GACPA,EAAML,cAAe,MAIpB4B,EAAenC,EAAWoC,QACxBpC,O,oDChGf,8CAEMqC,EAAYpC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACV/B,YAAa,KACbC,aAAc,KACdiE,iBAAiB,EACjBC,uBAAwB,KACxBC,cAAe,KACfC,cAAc,GAElB/B,SAAU,CACN5C,YADM,SACM8C,GACRA,EAAM6B,cAAe,GAEzBvD,cAJM,SAIQ0B,GACVA,EAAM0B,iBAAkB,EACxB1B,EAAMxC,YAAce,aAAaW,QAAQ,eACzCc,EAAMvC,aAAec,aAAaW,QAAQ,gBAC1Cc,EAAM4B,cAAgB,MAE1BlE,eAVM,SAUSsC,EAAOE,GAClB,MAAsCA,EAAOC,QAArC3C,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aACrBuC,EAAMxC,YAAcA,EACpBwC,EAAMvC,aAAeA,EACrBuC,EAAM0B,iBAAkB,EAExB1B,EAAM4B,cAAgB,KAEtBrD,aAAauD,QAAQ,cAAetE,GACpCe,aAAauD,QAAQ,eAAgBrE,GACrCuC,EAAM6B,cAAe,GAEzBlE,aAtBM,SAsBOqC,EAAOE,GAChBF,EAAM4B,cAAgB1B,EAAOC,QAC7BH,EAAM6B,cAAe,GAEzB5D,kBA1BM,SA0BY+B,EAAOE,GACrBF,EAAM2B,uBAAyBzB,EAAOC,QACtCH,EAAM6B,cAAe,GAEzBpD,OA9BM,SA8BCuB,GACHA,EAAM0B,iBAAkB,EACxBnD,aAAaC,WAAW,eACxBD,aAAaC,WAAW,iBAE5BuD,WAnCM,SAmCK/B,GACPA,EAAM4B,cAAgB,MAE1B3E,WAtCM,SAsCK+C,GACPA,EAAMxC,YAAc,KACpBwC,EAAMvC,aAAe,KACrBuC,EAAM0B,iBAAkB,EACxB1B,EAAM2B,uBAAyB,KAC/B3B,EAAM4B,cAAgB,KACtB5B,EAAM6B,cAAe,MAKpB7E,EAAcyE,EAAUD,QACtBC,O,kICPAO,EAnDA,SAACC,GACZ,IAAMP,EAAkBQ,aAAY,SAAClC,GAAD,OAAWA,EAAMmC,KAAKT,mBACpD7E,EAAWuF,cAKjB,OACI,yBAAQC,UAAWC,IAAQC,OAA3B,UACI,2CAEA,+BACKb,GACG,qCACI,6BACI,cAAC,IAAD,CACIc,GAAG,QACHC,gBAAiBH,IAAQI,OAF7B,uBAOJ,oBAAIC,QAlBF,WAClB9F,EAAS4B,gBAiBO,yBAINiD,GACE,qCACI,6BACI,cAAC,IAAD,CACIc,GAAG,SACHC,gBAAiBH,IAAQI,OAF7B,uBAOJ,oBAAIL,UAAWC,IAAQzE,SAAvB,SACI,cAAC,IAAD,CACI2E,GAAG,YACHC,gBAAiBH,IAAQI,OAF7B,iC,gCCtCfE,EAAiB,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,iBAC3DrB,EAAkBQ,aAAY,SAAClC,GAAD,OAAWA,EAAMmC,KAAKT,mBAC1D,OACI,cAAC,IAAD,2BACQqB,GADR,IAEIC,OAAQ,SAACf,GACL,OAAIP,EACO,cAACmB,EAAD,IAGH,cAAC,IAAD,CACIL,GAAI,CACAS,SAAU,SACVjD,MAAO,CACHkD,KAAMjB,EAAMkB,kB,iBCTjCC,EAPC,WACZ,OACI,qBAAKf,UAAWC,IAAQe,QAAxB,SACI,sBAAMhB,UAAWC,IAAQgB,UCK/BC,EAAWC,gBAAK,kBAAM,gCACtBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAQF,gBAAK,kBAAM,sDA4BVG,MA3Bf,WACI,IAAM9G,EAAWuF,cAKjB,OAJAwB,qBAAU,WACN/G,EAASqB,iBACV,CAACrB,IAGA,cAAC,WAAD,CAAUgH,SAAU,cAAC,EAAD,IAApB,SACI,sBAAKxB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,iCACI,cAAC,IAAD,CAAOyB,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,IAAD,CAAUvB,GAAG,YAEjB,cAAC,EAAD,CAAgBsB,KAAK,QAAQC,OAAK,EAACjB,UAAWY,IAC9C,cAAC,IAAD,CAAOI,KAAK,YAAZ,SACI,cAACP,EAAD,MAEJ,cAAC,IAAD,CAAOO,KAAK,SAAZ,SACI,cAACL,EAAD,e,+BCrBTO,EANDC,YAAe,CACzBC,QAAS,CACLC,MAAO/E,IAAW8E,QAClB/B,KAAMV,IAAUyC,WCCxBE,IAASpB,OACL,cAAC,IAAD,CAAUgB,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.1bbacc7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3RSNk\",\"register\":\"Header_register__OTQi4\",\"active\":\"Header_active___uFS0\"};","import axios from \"axios\";\nimport { useAuthorization } from \"../helpers\";\nimport { authActions } from \"../reducers/auth\";\nexport const login =\n    ({ username, password }) =>\n    async (dispatch) => {\n        const httpLogin = async () => {\n            dispatch(authActions.resetState());\n            dispatch(authActions.sendRequest());\n            const response = await axios.post(\n                `${process.env.REACT_APP_AUTH_URI}/auth/login`,\n                {\n                    username,\n                    password,\n                }\n            );\n            const { accessToken, refreshToken } = response.data;\n            dispatch(\n                authActions.loginSucceeded({\n                    accessToken,\n                    refreshToken,\n                })\n            );\n        };\n\n        try {\n            await httpLogin();\n        } catch (error) {\n            dispatch(\n                authActions.requestError(\n                    error?.response?.data?.error || \"Something went wrong!\"\n                )\n            );\n        }\n    };\n\nexport const register =\n    ({ fullname, username, password }) =>\n    async (dispatch) => {\n        const httpRegister = async () => {\n            dispatch(authActions.resetState());\n            dispatch(authActions.sendRequest());\n            const response = await axios.post(\n                `${process.env.REACT_APP_AUTH_URI}/auth/register`,\n                { fullname, username, password }\n            );\n            const { message } = response.data;\n            dispatch(authActions.registerSucceeded(message));\n        };\n\n        try {\n            await httpRegister();\n        } catch (error) {\n            dispatch(\n                authActions.requestError(\n                    error?.response?.data?.error || \"Something went wrong!\"\n                )\n            );\n        }\n    };\n\nexport const verifyToken = () => async (dispatch) => {\n    const headers = useAuthorization();\n    if (!headers) {\n        return;\n    }\n    const httpVerify = async () => {\n        dispatch(authActions.resetState());\n        await axios.post(\n            `${process.env.REACT_APP_AUTH_URI}/auth/verify-token`,\n            {},\n            {\n                headers,\n            }\n        );\n        dispatch(authActions.verifiedToken());\n    };\n\n    try {\n        await httpVerify();\n    } catch (error) {\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n    }\n};\nexport const logout = () => async (dispatch) => {\n    const headers = useAuthorization();\n    if (!headers) {\n        return;\n    }\n    const httpLogout = async () => {\n        dispatch(authActions.resetState());\n        await axios.get(`${process.env.REACT_APP_AUTH_URI}/auth/logout`, {\n            headers,\n        });\n        dispatch(authActions.logout());\n    };\n\n    try {\n        await httpLogout();\n    } catch (error) {\n        dispatch(authActions.logout());\n    }\n};\n","export const isEmpty = (value) => value.trim() !== \"\";\nexport const isGreaterThreeCharacters = (value) => value.trim().length >= 3;\nexport const useAuthorization = () => {\n    const headers = {};\n    const token = localStorage.getItem(\"accessToken\");\n    if (!token) {\n        return null;\n    }\n\n    headers.Authorization = `Bearer ${token}`;\n    return headers;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__1c-XE\",\"line\":\"Loading_line__3tqnj\",\"to-up\":\"Loading_to-up__25Yqn\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst tasksSlice = createSlice({\n    name: \"tasks\",\n    initialState: {\n        isFetchingData: false,\n        currentTasks: [],\n        notCompletedTasks: [],\n        isShownModal: false,\n        completedTasks: [],\n        error: null,\n        errorHandler: null,\n    },\n    reducers: {\n        fetchingData(state) {\n            state.isFetchingData = true;\n        },\n        taskErrorHandler(state, action) {\n            state.errorHandler = action.payload;\n        },\n        resetErrorState(state) {\n            state.error = null;\n            state.errorHandler = null;\n        },\n        getTasksError(state, action) {\n            state.error = action.payload;\n            state.isFetchingData = false;\n        },\n        replaceCurrentTasks(state, action) {\n            state.isFetchingData = false;\n            state.currentTasks = [...action.payload];\n            state.completedTasks = [...action.payload].filter(\n                (task) => task.isDone\n            );\n            state.notCompletedTasks = [...action.payload].filter(\n                (task) => !task.isDone\n            );\n        },\n\n        addTask(state, action) {\n            const newTask = action.payload;\n            state.currentTasks.unshift(newTask);\n            state.notCompletedTasks.unshift(newTask);\n        },\n        removeTask(state, action) {\n            const id = action.payload;\n            state.currentTasks = state.currentTasks.filter(\n                (task) => task.taskId !== id\n            );\n            state.notCompletedTasks = state.notCompletedTasks.filter(\n                (task) => task.taskId !== id\n            );\n            state.completedTasks = state.completedTasks.filter(\n                (task) => task.taskId !== id\n            );\n        },\n        updateTitle(state, action) {\n            const { taskId, title } = action.payload;\n            const existingCurrentTaskIndex = state.currentTasks.findIndex(\n                (task) => task.taskId === taskId\n            );\n            state.currentTasks[existingCurrentTaskIndex].title = title;\n            state.completedTasks = state.currentTasks.filter(\n                (task) => task.isDone\n            );\n            state.notCompletedTasks = state.currentTasks.filter(\n                (task) => !task.isDone\n            );\n\n            state.isShownModal = false;\n        },\n\n        updateComplete(state, action) {\n            const { taskId, isDone } = action.payload;\n\n            const existingCurrentTaskIndex = state.currentTasks.findIndex(\n                (task) => task.taskId === taskId\n            );\n            state.currentTasks[existingCurrentTaskIndex].isDone = isDone;\n            state.completedTasks = state.currentTasks.filter(\n                (task) => task.isDone\n            );\n            state.notCompletedTasks = state.currentTasks.filter(\n                (task) => !task.isDone\n            );\n        },\n\n        showModal(state) {\n            state.isShownModal = true;\n        },\n        closeModal(state) {\n            state.isShownModal = false;\n        },\n    },\n});\nexport const tasksActions = tasksSlice.actions;\nexport default tasksSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState: {\n        accessToken: null,\n        refreshToken: null,\n        isAuthenticated: false,\n        registerSuccessMessage: null,\n        errorResponse: null,\n        isRequesting: false,\n    },\n    reducers: {\n        sendRequest(state) {\n            state.isRequesting = true;\n        },\n        verifiedToken(state) {\n            state.isAuthenticated = true;\n            state.accessToken = localStorage.getItem(\"accessToken\");\n            state.refreshToken = localStorage.getItem(\"refreshToken\");\n            state.errorResponse = null;\n        },\n        loginSucceeded(state, action) {\n            const { accessToken, refreshToken } = action.payload;\n            state.accessToken = accessToken;\n            state.refreshToken = refreshToken;\n            state.isAuthenticated = true;\n\n            state.errorResponse = null;\n\n            localStorage.setItem(\"accessToken\", accessToken);\n            localStorage.setItem(\"refreshToken\", refreshToken);\n            state.isRequesting = false;\n        },\n        requestError(state, action) {\n            state.errorResponse = action.payload;\n            state.isRequesting = false;\n        },\n        registerSucceeded(state, action) {\n            state.registerSuccessMessage = action.payload;\n            state.isRequesting = false;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n            localStorage.removeItem(\"accessToken\");\n            localStorage.removeItem(\"refreshToken\");\n        },\n        resetError(state) {\n            state.errorResponse = null;\n        },\n        resetState(state) {\n            state.accessToken = null;\n            state.refreshToken = null;\n            state.isAuthenticated = false;\n            state.registerSuccessMessage = null;\n            state.errorResponse = null;\n            state.isRequesting = false;\n        },\n    },\n});\n\nexport const authActions = authSlice.actions;\nexport default authSlice;\n","import classes from \"./Header.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth-actions\";\nconst Header = (props) => {\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n    const dispatch = useDispatch();\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n    return (\n        <header className={classes.header}>\n            <h2>ReduxTodo</h2>\n\n            <ul>\n                {isAuthenticated && (\n                    <>\n                        <li>\n                            <NavLink\n                                to=\"/todo\"\n                                activeClassName={classes.active}\n                            >\n                                My Todo\n                            </NavLink>\n                        </li>\n                        <li onClick={logoutHandler}>Log out</li>\n                    </>\n                )}\n\n                {!isAuthenticated && (\n                    <>\n                        <li>\n                            <NavLink\n                                to=\"/login\"\n                                activeClassName={classes.active}\n                            >\n                                Sign In\n                            </NavLink>\n                        </li>\n                        <li className={classes.register}>\n                            <NavLink\n                                to=\"/register\"\n                                activeClassName={classes.active}\n                            >\n                                Sign Up\n                            </NavLink>\n                        </li>\n                    </>\n                )}\n            </ul>\n        </header>\n    );\n};\n\nexport default Header;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (isAuthenticated) {\n                    return <Component />;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location,\n                                },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n","import classes from \"./Loading.module.css\";\nconst Loading = () => {\n    return (\n        <div className={classes.loading}>\n            <span className={classes.line}></span>\n        </div>\n    );\n};\nexport default Loading;\n","import { Redirect, Route } from \"react-router-dom\";\nimport Header from \"./components/Layouts/Header\";\nimport { lazy, Suspense } from \"react\";\nimport { ProtectedRoute } from \"./components/Common/ProtectedRoute\";\nimport Loading from \"./components/Loading/Loading\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { verifyToken } from \"./actions/auth-actions\";\n\nconst Register = lazy(() => import(\"./pages/Register/Register\"));\nconst Login = lazy(() => import(\"./pages/Login/Login\"));\nconst Tasks = lazy(() => import(\"./components/Tasks/Tasks\"));\nfunction App() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(verifyToken());\n    }, [dispatch]);\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <div className=\"App\">\n                <Header />\n                <main>\n                    <Route path=\"/\" exact>\n                        <Redirect to=\"/todo\" />\n                    </Route>\n                    <ProtectedRoute path=\"/todo\" exact component={Tasks} />\n                    <Route path=\"/register\">\n                        <Register />\n                    </Route>\n                    <Route path=\"/login\">\n                        <Login />\n                    </Route>\n                </main>\n            </div>\n        </Suspense>\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"../reducers/auth\";\nimport tasksSlice from \"../reducers/task\";\n\nconst store = configureStore({\n    reducer: {\n        tasks: tasksSlice.reducer,\n        auth: authSlice.reducer,\n    },\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fontsource/roboto\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}